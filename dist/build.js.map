{"version":3,"sources":["node_modules/browser-pack/_prelude.js","js/dbhelper.js","js/main.js","node_modules/lozad/dist/lozad.js"],"names":[],"mappings":"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CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"build.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","export default class DbHelper {\r\n\r\n  /**\r\n   * Database URL.\r\n   * Change this to restaurants.json file location on your server.\r\n   */\r\n  static get DATABASE_URL() {\r\n    const port = 1337 // Change this to your server port\r\n    return `http://localhost:${port}/restaurants`;\r\n  }\r\n\r\n  /**\r\n   * Fetch all restaurants.\r\n   */\r\n  static fetchRestaurants(callback) {\r\n    fetch(DbHelper.DATABASE_URL)\r\n      .then(res => {\r\n        return res.json()\r\n      })\r\n      .then(restaurants => {\r\n        callback(null, restaurants);\r\n      })\r\n      .catch(e => {\r\n        const error = (`Request failed. Returned status of ${e}`);\r\n        callback(error, null);\r\n      })\r\n  }\r\n\r\n  /**\r\n   * Fetch a restaurant by its ID.\r\n   */\r\n  static fetchRestaurantById(id, callback) {\r\n    // fetch all restaurants with proper error handling.\r\n    fetch(`${DbHelper.DATABASE_URL}/${id}`)\r\n      .then(res => res.json())\r\n      .then(restaurant => {\r\n        callback(null, restaurant);\r\n      })\r\n      .catch(() => {\r\n        callback('Restaurant does not exist', null);\r\n      })\r\n  }\r\n\r\n  /**\r\n   * Fetch restaurants by a cuisine type with proper error handling.\r\n   */\r\n  static fetchRestaurantByCuisine(cuisine, callback) {\r\n    // Fetch all restaurants  with proper error handling\r\n    DbHelper.fetchRestaurants((error, restaurants) => {\r\n      if (error) {\r\n        callback(error, null);\r\n      } else {\r\n        // Filter restaurants to have only given cuisine type\r\n        const results = restaurants.filter(r => r.cuisine_type == cuisine);\r\n        callback(null, results);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Fetch restaurants by a neighborhood with proper error handling.\r\n   */\r\n  static fetchRestaurantByNeighborhood(neighborhood, callback) {\r\n    // Fetch all restaurants\r\n    DbHelper.fetchRestaurants((error, restaurants) => {\r\n      if (error) {\r\n        callback(error, null);\r\n      } else {\r\n        // Filter restaurants to have only given neighborhood\r\n        const results = restaurants.filter(r => r.neighborhood == neighborhood);\r\n        callback(null, results);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Fetch restaurants by a cuisine and a neighborhood with proper error handling.\r\n   */\r\n  static fetchRestaurantByCuisineAndNeighborhood(cuisine, neighborhood, callback) {\r\n    // Fetch all restaurants\r\n    DbHelper.fetchRestaurants((error, restaurants) => {\r\n      if (error) {\r\n        callback(error, null);\r\n      } else {\r\n        let results = restaurants\r\n        if (cuisine != 'all') { // filter by cuisine\r\n          results = results.filter(r => r.cuisine_type == cuisine);\r\n        }\r\n        if (neighborhood != 'all') { // filter by neighborhood\r\n          results = results.filter(r => r.neighborhood == neighborhood);\r\n        }\r\n        callback(null, results);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Fetch all neighborhoods with proper error handling.\r\n   */\r\n  static fetchNeighborhoods(callback) {\r\n    // Fetch all restaurants\r\n    DbHelper.fetchRestaurants((error, restaurants) => {\r\n      if (error) {\r\n        callback(error, null);\r\n      } else {\r\n        // Get all neighborhoods from all restaurants\r\n        const neighborhoods = restaurants.map((v, i) => restaurants[i].neighborhood)\r\n        // Remove duplicates from neighborhoods\r\n        const uniqueNeighborhoods = neighborhoods.filter((v, i) => neighborhoods.indexOf(v) == i)\r\n        callback(null, uniqueNeighborhoods);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Fetch all cuisines with proper error handling.\r\n   */\r\n  static fetchCuisines(callback) {\r\n    // Fetch all restaurants\r\n    DbHelper.fetchRestaurants((error, restaurants) => {\r\n      if (error) {\r\n        callback(error, null);\r\n      } else {\r\n        // Get all cuisines from all restaurants\r\n        const cuisines = restaurants.map((v, i) => restaurants[i].cuisine_type)\r\n        // Remove duplicates from cuisines\r\n        const uniqueCuisines = cuisines.filter((v, i) => cuisines.indexOf(v) == i)\r\n        callback(null, uniqueCuisines);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Restaurant page URL.\r\n   */\r\n  static urlForRestaurant(restaurant) {\r\n    return (`./restaurant.html?id=${restaurant.id}`);\r\n  }\r\n\r\n  /**\r\n   * Restaurant image URL.\r\n   */\r\n  static imageUrlForRestaurant(restaurant) {\r\n    return (`/dist/images/${restaurant.photograph}.jpg`);\r\n  }\r\n\r\n  /**\r\n   * Map marker for a restaurant.\r\n   */\r\n  static mapMarkerForRestaurant(restaurant, map) {\r\n    const marker = new google.maps.Marker({\r\n      position: restaurant.latlng,\r\n      title: restaurant.name,\r\n      url: DbHelper.urlForRestaurant(restaurant),\r\n      map: map,\r\n      animation: google.maps.Animation.DROP}\r\n    );\r\n    return marker;\r\n  }\r\n\r\n}\r\n","import DbHelper from './dbhelper';\r\nimport lozad from 'lozad';\r\n\r\nlet restaurants,\r\n  neighborhoods,\r\n  cuisines\r\nvar map\r\n\r\nconst observer = lozad(); // lazy loads elements with default selector as '.lozad'\r\nlet loc = {\r\n  lat: 40.722216,\r\n  lng: -73.987501\r\n};\r\nlet self = {\r\n  markers: []\r\n};\r\n\r\nconst registerServiceWorker = () => {\r\n  if(!navigator.serviceWorker) return;\r\n\r\n  navigator.serviceWorker.register('/build_sw.js').then(function(reg) {\r\n    if (!navigator.serviceWorker.controller) {\r\n        return;\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * Fetch all neighborhoods and set their HTML.\r\n */\r\nconst fetchNeighborhoods = () => {\r\n  DbHelper.fetchNeighborhoods((error, neighborhoods) => {\r\n    if (error) { // Got an error\r\n      console.error(error);\r\n    } else {\r\n      self.neighborhoods = neighborhoods;\r\n      fillNeighborhoodsHTML();\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * Set neighborhoods HTML.\r\n */\r\nconst fillNeighborhoodsHTML = (neighborhoods = self.neighborhoods) => {\r\n  const select = document.getElementById('neighborhoods-select');\r\n  neighborhoods.forEach(neighborhood => {\r\n    const option = document.createElement('option');\r\n    option.innerHTML = neighborhood;\r\n    option.value = neighborhood;\r\n    select.append(option);\r\n\r\n    observer.observe();\r\n  });\r\n}\r\n\r\n/**\r\n * Fetch all cuisines and set their HTML.\r\n */\r\nconst fetchCuisines = () => {\r\n  DbHelper.fetchCuisines((error, cuisines) => {\r\n    if (error) { // Got an error!\r\n      console.error(error);\r\n    } else {\r\n      self.cuisines = cuisines;\r\n      fillCuisinesHTML();\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * Set cuisines HTML.\r\n */\r\nconst fillCuisinesHTML = (cuisines = self.cuisines) => {\r\n  const select = document.getElementById('cuisines-select');\r\n  \r\n  cuisines.forEach(cuisine => {\r\n    const option = document.createElement('option');\r\n    option.innerHTML = cuisine;\r\n    option.value = cuisine;\r\n    select.append(option);\r\n  });\r\n}\r\n\r\n\r\n/**\r\n * Update page and map for current restaurants.\r\n */\r\nconst updateRestaurants = () => {\r\n  const cSelect = document.getElementById('cuisines-select');\r\n  const nSelect = document.getElementById('neighborhoods-select');\r\n\r\n  const cIndex = cSelect.selectedIndex;\r\n  const nIndex = nSelect.selectedIndex;\r\n\r\n  const cuisine = cSelect[cIndex].value;\r\n  const neighborhood = nSelect[nIndex].value;\r\n  DbHelper.fetchRestaurantByCuisineAndNeighborhood(cuisine, neighborhood, (error, restaurants) => {\r\n    if (error) { // Got an error!\r\n      console.error(error);\r\n    } else {\r\n      resetRestaurants(restaurants);\r\n      fillRestaurantsHTML();\r\n    }\r\n  })\r\n}\r\n\r\n/**\r\n * Clear current restaurants, their HTML and remove their map markers.\r\n */\r\nconst resetRestaurants = (restaurants) => {\r\n  // Remove all restaurants\r\n  self.restaurants = [];\r\n  const ul = document.getElementById('restaurants-list');\r\n  ul.innerHTML = '';\r\n  \r\n  // Remove all map markers\r\n  self.markers.forEach(m => m.setMap(null));\r\n  self.markers = [];\r\n  self.restaurants = restaurants;\r\n}\r\n\r\n/**\r\n * Create all restaurants HTML and add them to the webpage.\r\n */\r\nconst fillRestaurantsHTML = (restaurants = self.restaurants) => {\r\n  const ul = document.getElementById('restaurants-list');\r\n  restaurants.forEach(restaurant => {\r\n    ul.append(createRestaurantHTML(restaurant));\r\n  });\r\n  observer.observe();\r\n  addMarkersToMap();\r\n}\r\n\r\n/**\r\n * Create restaurant HTML.\r\n */\r\nconst createRestaurantHTML = (restaurant) => {\r\n  const li = document.createElement('li');\r\n  \r\n  const image = document.createElement('img');\r\n  image.className = 'restaurant-img lozad';\r\n  image.setAttribute('data-src', DbHelper.imageUrlForRestaurant(restaurant));\r\n  image.alt = `Image of a restaurant called ${restaurant.name}`;\r\n  li.append(image);\r\n  \r\n  const name = document.createElement('h2');\r\n  name.innerHTML = restaurant.name;\r\n  li.append(name);\r\n  \r\n  const neighborhood = document.createElement('p');\r\n  neighborhood.innerHTML = restaurant.neighborhood;\r\n  li.append(neighborhood);\r\n  \r\n  const address = document.createElement('p');\r\n  address.innerHTML = restaurant.address;\r\n  li.append(address);\r\n  \r\n  const more = document.createElement('a');\r\n  more.innerHTML = 'View Details';\r\n  more.href = DbHelper.urlForRestaurant(restaurant);\r\n  li.append(more)\r\n  \r\n  return li\r\n}\r\n\r\n/**\r\n * Add markers for current restaurants to the map.\r\n */\r\nconst addMarkersToMap = (restaurants = self.restaurants) => {\r\n  restaurants.forEach(restaurant => {\r\n    // Add marker to the map\r\n    const marker = DbHelper.mapMarkerForRestaurant(restaurant, self.map);\r\n    google.maps.event.addListener(marker, 'click', () => {\r\n      window.location.href = marker.url\r\n    });\r\n    self.markers.push(marker);\r\n  });\r\n\r\n  const markers = restaurants.map(restaurant => restaurant.latlng)\r\n  updateMapPicture(markers)\r\n}\r\nconst updateMapPicture = (markers) => {\r\n  console.log(markers)\r\n  const url = `https://maps.googleapis.com/maps/api/staticmap?\r\n  center=${loc.lat}, ${loc.lng}\r\n  &zoom=12\r\n  &size=2400x2400\r\n  &maptype=roadmap\r\n  ${markers ? markers.map(marker => `&markers=color:red%7C${marker.lat},${marker.lng}`).join('') : ''}\r\n  &key=AIzaSyAXlOTPzwGrGLlSNT9IpeYO9oTzeFPZ7a0`\r\n\r\n  let img = document.createElement('img');\r\n  img.src = url\r\n  img.style['height']='100%'\r\n  img.style['width']='100%'\r\n  img.style['object-fit']='cover'\r\n\r\n  const map = document.querySelector('#map')\r\n  map.innerHTML = ''\r\n  map.appendChild(img)\r\n}\r\n/**\r\n * Initialize Google map, called from HTML.\r\n */\r\nwindow.initMap = () => {\r\n  \r\n  // self.map = new google.maps.Map(document.getElementById('map'), {\r\n  //   zoom: 12,\r\n  //   center: loc,\r\n  //   scrollwheel: false\r\n  // });\r\n\r\n  updateMapPicture();\r\n\r\n  updateRestaurants();\r\n}\r\n\r\n/**\r\n * Fetch neighborhoods and cuisines as soon as the page is loaded.\r\n */\r\ndocument.addEventListener('DOMContentLoaded', (event) => {\r\n  window.updateRestaurants = updateRestaurants;\r\n  registerServiceWorker();\r\n  fetchNeighborhoods();\r\n  fetchCuisines();\r\n  \r\n  observer.observe();\r\n});","/*! lozad.js - v1.4.0 - 2018-04-22\n* https://github.com/ApoorvSaxena/lozad.js\n* Copyright (c) 2018 Apoorv Saxena; Licensed MIT */\n\n\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.lozad = factory());\n}(this, (function () { 'use strict';\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n/**\n * Detect IE browser\n * @const {boolean}\n * @private\n */\nvar isIE = document.documentMode;\n\nvar defaultConfig = {\n  rootMargin: '0px',\n  threshold: 0,\n  load: function load(element) {\n    if (element.nodeName.toLowerCase() === 'picture') {\n      var img = document.createElement('img');\n      if (isIE && element.getAttribute('data-iesrc')) {\n        img.src = element.getAttribute('data-iesrc');\n      }\n      element.appendChild(img);\n    }\n    if (element.getAttribute('data-src')) {\n      element.src = element.getAttribute('data-src');\n    }\n    if (element.getAttribute('data-srcset')) {\n      element.srcset = element.getAttribute('data-srcset');\n    }\n    if (element.getAttribute('data-background-image')) {\n      element.style.backgroundImage = 'url(\\'' + element.getAttribute('data-background-image') + '\\')';\n    }\n  },\n  loaded: function loaded() {}\n};\n\nfunction markAsLoaded(element) {\n  element.setAttribute('data-loaded', true);\n}\n\nvar isLoaded = function isLoaded(element) {\n  return element.getAttribute('data-loaded') === 'true';\n};\n\nvar onIntersection = function onIntersection(load, loaded) {\n  return function (entries, observer) {\n    entries.forEach(function (entry) {\n      if (entry.intersectionRatio > 0) {\n        observer.unobserve(entry.target);\n\n        if (!isLoaded(entry.target)) {\n          load(entry.target);\n          markAsLoaded(entry.target);\n          loaded(entry.target);\n        }\n      }\n    });\n  };\n};\n\nvar getElements = function getElements(selector) {\n  if (selector instanceof Element) {\n    return [selector];\n  }\n  if (selector instanceof NodeList) {\n    return selector;\n  }\n  return document.querySelectorAll(selector);\n};\n\nvar lozad = function () {\n  var selector = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '.lozad';\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var _defaultConfig$option = _extends({}, defaultConfig, options),\n      rootMargin = _defaultConfig$option.rootMargin,\n      threshold = _defaultConfig$option.threshold,\n      load = _defaultConfig$option.load,\n      loaded = _defaultConfig$option.loaded;\n\n  var observer = void 0;\n\n  if (window.IntersectionObserver) {\n    observer = new IntersectionObserver(onIntersection(load, loaded), {\n      rootMargin: rootMargin,\n      threshold: threshold\n    });\n  }\n\n  return {\n    observe: function observe() {\n      var elements = getElements(selector);\n\n      for (var i = 0; i < elements.length; i++) {\n        if (isLoaded(elements[i])) {\n          continue;\n        }\n        if (observer) {\n          observer.observe(elements[i]);\n          continue;\n        }\n        load(elements[i]);\n        markAsLoaded(elements[i]);\n        loaded(elements[i]);\n      }\n    },\n    triggerLoad: function triggerLoad(element) {\n      if (isLoaded(element)) {\n        return;\n      }\n\n      load(element);\n      markAsLoaded(element);\n      loaded(element);\n    }\n  };\n};\n\nreturn lozad;\n\n})));\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}